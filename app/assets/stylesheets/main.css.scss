// Place all the styles related to the StaticPages controller here.
// They will automatically be included in application.css.
// You can use Sass (SCSS) here: http://sass-lang.com/

@import "base/meyer-reset-mod.css.scss";
@import "base/utilities.css.scss";

@function nth_if($map_, $i_)
{
	$max: length($map_);
	@if ($i_ > $max) {
		@return nth($map_, $max);
	}
	@if ($i_ < 1) {
		@return nth($map_, 1);
	}
	@return nth($map_, $i_);
}

@mixin mq($min_, $max_) {
	@if $min_ == 0 {
		@media only screen and (max-width: "#{$max_}")
		{ @content; }
	}
	@else if $max_ == 0 {
		@media only screen and (min-width: "#{$min_}")
		{ @content; }
	}
	@else {
		@media only screen and (min-width: "#{$min_}") and (max-width: "#{$max_}")
		{ @content; }
	}
}

/***** VARS *****/
$namespace: "know";


/*** BREAKPOINTS
*/
$bps: 
(
	340px, 
	480px,
	800px,
	1024px
);
@function _bps($i_) {
	@return nth($bps, $i_);
}
/***/

/*** SIZES 
*/
$sizes_b: 
(
	30px,
	32px,
	36px,
	40px
);
@function _sizes_b($i_) {
	@return nth($sizes_b, $i_);
}

$sizes_r: (
	1,
	.756,
	.571,
	.465,
	.378
);
@function _sizes_r($i_) {
	@return nth($sizes_r, $i_);
}

@function size_at($i_, $bp_) {
	@return _sizes_r($i_) * _sizes_b($bp_);
}
/***/

@mixin sizes($i_, $p_) {
	@include mq(0, _bps(1)) {
		#{$p_}: size_at($i_, 1);
	}

	@include mq(_bps(1), _bps(2)) {
		#{$p_}: size_at($i_, 2);
	}
	@include mq(_bps(2), _bps(3)) {
		#{$p_}: size_at($i_, 3);
	}
	@include mq(_bps(3), _bps(4)) {
		#{$p_}: size_at($i_, 4);
	}

	@include mq(_bps(4), 0) {
		#{$p_}: size_at($i_, 4);
	}
}

/*** COLORS
*/
$salmender: w_bl(rgb(100, 0, 0), 0.1);
/***/

/*** LAYOUT
*/
$margins-rl: 48px;
$nav-bar-h: 96px;
/***/

/*** ICONS
*/
$nav-icon-size: 40px;
/***/

/*****/

/***** https://www.google.com/webhp?sourceid=chrome-instant&ion=1&espv=2&ie=UTF-8#q=sass%20prefix%20every%20class *****/

/***** STUFF I DON'T WANNA FUCK UP *****/
.#{$namespace} {
	/* this was here before, don't wanna fuck it up */
	box-sizing: border-box;
}

section {
	width: 100%;
}

/***** GLOBAL *****/
.vmn {
	height: 48px;
	/* margins r-l */
}

.row {
	display: inline-flex;
	flex-direction: row;
}

.col {
	display: inline-flex;
	flex-direction: column;
}



/***** OBJECTS *****/
.svg-link {
	display: inline-flex;
	justify-content: center;
	align-items: center;
	svg {
		height: 100%;
		&.svg-plus {
			height: 85%;
		}
		&.svg-user {
			height: 98%;
		}
	}
}

/***** APP LAYOUT *****/
.nav-bar.row {
	align-items: center;
	height: $nav-bar-h;
	background-color: rgb2rgba($salmender, 0.95);
	z-index: 1000;
}

/* 
	rather than the following, could 
	use a parent 'section' item
	with 
	space-between
	and either
	flex-grow: <relative size for space and margins>;
	or
	margin-left: auto
	with item margins

	the latter might be preferable for maintaining margins
*/
#bar-t {
	position: fixed;
	left: 0;
	right: 0;
	top: 0;
	justify-content: space-around;

	.br {
		flex-basis: 0;
		flex-grow: 1;

		@include mq(0, _bps(2))
		{
			display: none;
		}
	}

	.item {
		@include mq(0, _bps(2))
		{
			flex-basis: 30px;
			margin: 0 0;
			height: 30px;
			/* RATIO: 0.6 or 1.666... */
		}
		@include mq(_bps(2), _bps(3))
		{
			flex-basis: 36px;
			margin: 0 22px;
			height: 36px;
			/* RATIO: 0.6111... or 1.6363... */
		}
		@include mq(_bps(3), 0)
		{
			flex-basis: 40px;
			margin: 0 36px;
			height: 40px;
			/* RATIO: 0.9 or 1.111... */
		}
	}
}

#bar-b {
	position: fixed;
	left: 0;
	right: 0;
	bottom: 0;
	justify-content: space-around;

	> * {
	}
}

/***** HEADERS *****/
.#{$namespace} {
	font-size: 36px;
}


.h1 {
	/* change to f1, etc. */
	font-size: size_at(1, 4);
	font-weight: bold;

	@include sizes(1, "font-size");
}
.h2 {
	font-size: size_at(2, 4);
	font-weight: bold;

	@include sizes(2, "font-size");
}
.h3 {
	font-size: size_at(3, 4);

	@include sizes(3, "font-size");

}
.h4 {
	font-size: size_at(4, 4);

	@include sizes(4, "font-size");
}
.h5 {
	font-size: size_at(5, 4);

	@include sizes(5, "font-size");
}
/*****/

.page {
	width: 100vw;
	box-sizing: border-box;
	padding: $nav-bar-h $margins-rl;
	padding-bottom: $nav-bar-h*2;
	max-width: 960px;
	margin: 0 auto;

	@include mq(0, _bps(2)) {
		padding: $nav-bar-h $margins-rl*0.25;
	}
}

/***** FORM *****/
form.new_event {
	display: inline-flex;
	flex-direction: column;
	justify-content: space-between;
	padding: 1rem 1.5rem;
	border: 1px solid black;

}

form.new_event .field {
	flex-grow: 1;
	margin: .5rem 0;
	font-size: 1em;

}

form.new_event input {
	/***** overrides *****/
	padding: 0 0;
	margin: 0 0;
	box-sizing: border-box;
	width: 100%;
	font-size: 1em;
	/*****/
}

form.new_event .actions {
	flex-grow: 1;
	margin: 1rem 0;
}

form.new_event .actions input {
	/***** overrides *****/
	background: none;
	border: none;
	height: 100%;
	/*****/

	background-color: rgba(100, 0, 0, 0.1);
	padding: .5rem 0;
}
/*****/

.tags {
	color: rgba(100, 0, 0, 0.3);
}

/***** dependent files *****/
@import "lists.css.scss";
@import "show.css.scss";
@import "comments.css.scss";
@import "dynamic.css.scss";
@import "calendar.css.scss";
/*****/
